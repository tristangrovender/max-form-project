{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trist\\\\PersonalProjects\\\\max-form-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        onBlur: nameInputBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"E+J08VDKU5xPbhzR5ys5bmcr9/o=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/trist/PersonalProjects/max-form-project/src/components/SimpleInput.js"],"names":["React","useRef","useState","SimpleInput","props","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputChangeHandler","event","target","value","trim","nameInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACO,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMS,sBAAsB,GAAGC,KAAK,IAAI;AACtCN,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AAEA,QAAIT,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BP,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAND;;AAQA,QAAMQ,oBAAoB,GAAGJ,KAAK,IAAI;AACpCF,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIL,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GAND;;AAQA,QAAMS,qBAAqB,GAAGL,KAAK,IAAI;AACrCA,IAAAA,KAAK,CAACM,cAAN;AAEAR,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AAEA,QAAIL,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BP,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAW,IAAAA,OAAO,CAACC,GAAR,CAAYf,WAAZ;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAdD;;AAgBA,QAAMe,kBAAkB,GAAG,CAACd,kBAAD,IAAuBE,kBAAlD;AAEA,QAAMa,gBAAgB,GAAGD,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEJ,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,QAAQ,EAAEX,sBAHZ;AAIE,QAAA,KAAK,EAAEN,WAJT;AAKE,QAAA,MAAM,EAAEW;AALV;AAAA;AAAA;AAAA;AAAA,cAFF,EASGK,kBAAkB,iBACjB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/DD;;GAAMlB,W;;KAAAA,W;AAiEN,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nconst SimpleInput = props => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (enteredName.trim() !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    console.log(enteredName);\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}